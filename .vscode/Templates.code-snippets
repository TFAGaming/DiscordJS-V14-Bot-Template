{

  "Discord.js > Slash Commands": {
    "prefix": "!djs:slash",
    "body": [
      "            const {",
      "                ChatInputCommandInteraction,",
      "                SlashCommandBuilder,",
      "            } = require(\"discord.js\");",
      "            const ExtendedClient = require(\"../../../class/ExtendedClient\");",
      "                                                                             ",
      "           module.exports = {",
      "               structure: new SlashCommandBuilder()",
      "                    .setName(\"\")",
      "                    .setDescription(\"\"),",
      "               options: {",
      "                    nsfw: false,",
      "                    developers: false",
      "                },",
      "               /**",
      "                 * @param {ExtendedClient} client",
      "                * @param {ChatInputCommandInteraction} interaction",
      "                */",
      "                run: async (client, interaction) => {",

      "                                   ",

      "                }",
      "            };"
    ],
    "description": "Create New Slash Commands"
  },
  "Discord.js > Prefix Commands": {
    "prefix": "!djs:prefix",
    "body": [
"        const { Message, PermissionFlagBits } = require('discord.js');"
"const ExtendedClient = require('../../../class/ExtendedClient');"

"module.exports = {"
"    structure: {"
"        name: '',"
"        description: '',"
"       aliases: [],"
"        permissions: null"
"    },"
"    /**"
"     * @param {ExtendedClient} client "
"     * @param {Message} message "
"     * @param {[String]} args "
"     */"
"    run: async (client, message, args) => {"
"                                         "
"    }"
"};"
    ],
    "description": "Create New Prefix Commands"
  },

  "Discord.js > Context User Command ": {
    "prefix": "!djs:context:USER",
    "body": [
" const { UserContextMenuCommandInteraction, ContextMenuCommandBuilder } = require('discord.js');"
"const ExtendedClient = require('../../../class/ExtendedClient');"

"module.exports = {"
"    structure: new ContextMenuCommandBuilder()"
"        .setName('')"
"        .setType(2),"
"    /**"
"     * @param {ExtendedClient} client "
"     * @param {UserContextMenuCommandInteraction} interaction" 
"     */"
"    run: async (client, interaction) => {"
"                                   "
"    }  "  
"};"
    ],
    "description": "Create New Context Menu User Commands"
  },

  "Discord.js > Context Message Command ": {
    "prefix": "!djs:context:MESSAGE",
    "body": [
"const { MessageContextMenuCommandInteraction, ContextMenuCommandBuilder } = require('discord.js');"
"const ExtendedClient = require('../../../class/ExtendedClient');"

"module.exports = {"
"    structure: new ContextMenuCommandBuilder()"
"        .setName('')"
"        .setType(3),"
"    /**"
"     * @param {ExtendedClient} client "
"     * @param {MessageContextMenuCommandInteraction} interaction"
"     */"
"    run: async (client, interaction) => {"
"                                   "
"    }  "
"};"
    ],
    "description": "Create New Context Menu Message Commands"
    
},
    "Discord.js > Components": {
    "prefix": "!djs:components",
    "body": [
"const { } = require('discord.js');"
"const ExtendedClient = require('../../class/ExtendedClient');"

"module.exports = {"
"    customId: '',"
"    /**"
"     * @param {ExtendedClient} client "
"     * @param {*} interaction "
"     */"
"    run: async (client, interaction) => {"
"                     "  
"    }"
"};"
    ],
    
    "description": "Create New Components"
},
    "Discord.js > Events": {
    "prefix": "!djs:events",
    "body": [
"        const ExtendedClient = require('../../class/ExtendedClient');"
"        const { } = require('discord.js');"
"        module.exports = {"
"           event: '',"
"            once: false,"
"            /**"
"             * @param {ExtendedClient} client"
"             * @param {*} something "
"             * @returns "
"             */"
"            run: (client, something) => {"
"                             "
"            }"
"        };"
    ],
    "description": "Create New Events"
}
}